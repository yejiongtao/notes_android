1. using Location Services
	LocationRequest request = LocationRequest.create();
	request.setPriority(LocationRequest.PRIORITY_HIGH_ACCURACY);	// how Android should prioritize battery life against accuracy to satisfy your request
									// by default, it is configured for accuracy within a city block
									// change into high accuracy
	request.setNumUpdates(1);	// how many times the location should be updated
	request.setInterval(0);		// how frequently the location should be updated
					// 0 means ASAP, because it's just once
	// you can also set the expiration – whether the request should expire and, if so, when
	// and smallest displacement – the smallest amount the device must move (in meters) to trigger a location update

	// send off this request and listen for the Locations that come back
	// if this is a longer-lived request, you should call removeLocationUpdates(…) later to cancel the request
	LocationServices.FusedLocationApi
		.requestLocationUpdates(mClient, request, new LocationListener() {
		    @Override
		    public void onLocationChanged(Location location) {
			Log.i(TAG, "Got a fix: " + location);
		    }
		});

2. ProgressDialog
	shows a spinning progress indicator
	(you may want to clear this up inside AsyncTask's onPostExecute())

3. Maps services
	import library
		com.google.android.gms:play-services-maps
	more permission
		



